# consider implementing:
# https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#examples
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pihole-deployment
  namespace: secure-dns
  labels:
    app: pihole
spec:
  selector:
    matchLabels:
      app: pihole
  replicas: 1
  template:
    metadata:
      labels:
        app: pihole
    spec:
      hostAliases:
        - ip: "127.0.0.1"
          hostnames:
            - "pi.hole"
      volumes:
        - name: pihole-vol
          hostPath:
            path: /mnt/zfs-nas/cluster/pihole
            type: Directory
        - name: pihole-logs
          hostPath:
            path: /mnt/zfs-nas/cluster/pihole/pihole.log
            type: File
        - name: dnsmasq-vol
          hostPath:
            path: /mnt/zfs-nas/cluster/dnsmasq
            type: Directory
        - name: resolv-conf
          hostPath:
            path: /mnt/zfs-nas/cluster/pihole/resolv.conf
            type: File
      containers:
        - name: pihole
          image: docker.io/pihole/pihole:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: TZ
              value: "America/New_York"
            - name: WEBPASSWORD
              value: "Password1!"
            - name: DNS1
              value: "10.3.238.235#5054"
            - name: DNS2
              value: "1.1.1.1"
            - name: PH_VERBOSE
              value: "1"
          volumeMounts:
            - mountPath: /etc/pihole/
              name: pihole-vol
            - mountPath: /var/log/pihole.log
              name: pihole-logs
            - mountPath: /etc/dnsmasq.d/
              name: dnsmasq-vol
            - mountPath: /etc/resolv.conf
              name: resolv-conf
          ports:
            - containerPort: 80
              name: pihole-http
              protocol: TCP
            - containerPort: 53
              name: dns
              protocol: TCP
            - containerPort: 53
              name: dns-udp
              protocol: UDP
            - containerPort: 443
              name: pihole-ssl
              protocol: TCP
            - containerPort: 67
              name: client-udp
              protocol: UDP
          securityContext:
            capabilities:
              add: ["NET_ADMIN"]
---
apiVersion: v1
kind: Service
metadata:
  name: pihole-tcp
  namespace: secure-dns
  labels:
    app: pihole
  annotations:
    metallb.universe.tf/address-pool: external-ip-pool
    metallb.universe.tf/allow-shared-ip: pihole-svc
spec:
  selector:
    app: pihole
  type: LoadBalancer
  externalTrafficPolicy: Cluster
  loadBalancerIP: 192.168.1.20
  ports:
    - name: pihole-http
      protocol: TCP
      port: 80
      targetPort: 80
    - name: pihole-https
      protocol: TCP
      port: 443
      targetPort: 443
    - name: dns-tcp
      protocol: TCP
      port: 53
      targetPort: 53
---
apiVersion: v1
kind: Service
metadata:
  name: pihole-udp
  namespace: secure-dns
  labels:
    app: pihole
  annotations:
    metallb.universe.tf/address-pool: external-ip-pool
    metallb.universe.tf/allow-shared-ip: pihole-svc
spec:
  selector:
    app: pihole
  type: LoadBalancer
  externalTrafficPolicy: Cluster
  loadBalancerIP: 192.168.1.20
  ports:
    - name: pihole-client
      protocol: UDP
      port: 67
      targetPort: 67
    - name: dns-udp
      protocol: UDP
      port: 53
      targetPort: 53
