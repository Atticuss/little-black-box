# note that this template is currently not working. a yaml parsing
# error occurs on the `graylog.input` field and i've been unable
# to resolve it.

# helm install graylog kongz/graylog --version 2.1.1 --namespace graylog \
# --set graylog.persistence.storageClass="graylog-pv" \
# --set graylog.persistence.size="20Gi" \
# --set graylog.replicas="1" \
# --set mongodb.global.storageClass="mongodb-pv" \
# --set mongodb.persistence.size="10Gi" \
# --set mongodb.architecture="standalone" \
# --set elasticsearch.volumeClaimTemplate.storageClassName="elasticsearch-pv" \
# --set elasticsearch.volumeClaimTemplate.resources.requests.storage="20Gi" \
# --set elasticsearch.replicas="1" \
# --debug
#apiVersion: argoproj.io/v1alpha1
#kind: Application
#metadata:
#  name: loki
#  namespace: argocd
#spec:
#  project: default
#  destination:
#    server: "https://kubernetes.default.svc"
#    namespace: loki
#  source:
#    chart: loki-stack
#    repoURL: https://grafana.github.io/loki/charts
#    # vers ref: helm show all loki-stack --repo https://github.com/grafana/helm-charts
#    targetRevision: 2.6.5
#    helm:
#      parameters:
#        # https://github.com/bitnami/charts/tree/master/bitnami/mongodb/#parameters
#        - name: grafana.enabled
#          value: "true"
#        - name: filebeat.enabled
#          value: "true"
#        - name: logstash.enabled
#          value: "true"

# ripped from here:
#   https://ishanjainn.medium.com/deploy-grafana-loki-and-promtail-using-argocd-416b2fd4539f

piVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: loki
  namespace: argocd
spec:
  destination:
    namespace: loki
    server: https://kubernetes.default.svc
  project: default
  source:
    chart: loki-distributed
    repoURL: https://grafana.github.io/helm-charts
    targetRevision: 0.55.0 #https://github.com/grafana/helm-charts/tree/main/charts/loki-distributed
    helm:
      values: |
        fullnameOverride: loki                        # Giving a fullnameoverride to avoid default names for resources
        loki:
          config: |
            auth_enabled: false
            server:
              http_listen_port: 3100
            distributor:
              ring:
                kvstore:
                  store: memberlist
            memberlist:
              join_members:
                - {{ include "loki.fullname" . }}-memberlist
            ingester:
              lifecycler:
                ring:
                  kvstore:
                    store: memberlist
                  replication_factor: 1
              chunk_idle_period: 30m
              chunk_block_size: 262144
              chunk_encoding: snappy
              chunk_retain_period: 1m
              max_transfer_retries: 0
              wal:
                dir: /var/loki/wal
            limits_config:
              enforce_metric_name: false
              reject_old_samples: true
              reject_old_samples_max_age: 168h
              max_cache_freshness_per_query: 10m
            schema_config:
              configs:
                - from: 2020-09-07
                  store: boltdb-shipper
                  object_store: filesystem
                  schema: v11
                  index:
                    prefix: loki_index_
                    period: 24h
            storage_config:
              boltdb_shipper:
                shared_store: filesystem
                active_index_directory: /var/loki/index
                cache_location: /var/loki/cache
                cache_ttl: 168h
                {{- if .Values.indexGateway.enabled }}
                index_gateway_client:
                  server_address: dns:///{{ include "loki.indexGatewayFullname" . }}:9095
                {{- end }}
              filesystem:
                directory: /var/loki/chunks
            chunk_store_config:
              max_look_back_period: 0s
            table_manager:
              retention_deletes_enabled: false
              retention_period: 0s
            query_range:
              align_queries_with_step: true
              max_retries: 5
              split_queries_by_interval: 15m
              cache_results: true
              results_cache:
                cache:
                  enable_fifocache: true
                  fifocache:
                    max_size_items: 1024
                    validity: 24h
            frontend_worker:
              frontend_address: {{ include "loki.queryFrontendFullname" . }}:9095
            frontend:
              log_queries_longer_than: 5s
              compress_responses: true
              tail_proxy_url: http://{{ include "loki.querierFullname" . }}:3100
            compactor:
              shared_store: filesystem
            ruler:
              storage:
                type: local
                local:
                  directory: /etc/loki/rules
              rule_path: /tmp/loki/scratch
              alertmanager_url: http://alertmanager-operated.monitoring:9093   # alertmanager URL to use if using alerting-rules
              ring:
                kvstore:
                  store: inmemory
        ruler:
          enabled: true  
          directories:
            loki_alerts:
              rules.txt: |                                 # Sample alerting-rule using LogQL
                groups:
                  - name: loki-test-group                  # rule group
                    rules:
                      - alert: RandomLokiTesting           # alert-name
                        expr: sum by (throughput) (rate({component="ruler"}[2m])) < 10       # LogQL expression to evaluate
                        for: 2m                            # duration for which LogQL expression should evaluate to true
                        labels:
                          severity: warning
                          team: devops
                          category: logs
                        annotations:
                          title: "Low ThroughPut Alert"
                          description: "Ruler has low throughput"
                          dashboard: "https://grafana.com/grafana/dashboards/"
                          runbook: "https://runbooks.prometheus-operator.dev"
                          logurl: "https://grafana.com/loki"
        ingester:
          persistence:
            enabled: true
            size: 1Gi          
        querier:
          persistence:
            enabled: true
            size: 1Gi
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
